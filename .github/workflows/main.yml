name: Build
on: [push]
jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:8.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache nuget packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build
        run: dotnet build

      - name: Test
        run: dotnet test
  
  build-node:
    runs-on: ubuntu-latest
    container: node:20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Restore npm packages
        run: npm ci
        working-directory: Sso

      - name: Build
        run: npm run build
        working-directory: Sso

  docker:
    needs:
      - build-dotnet
      - build-node
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/axle-h/sso
          tags: |
            type=sha
            type=ref,event=branch,enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}